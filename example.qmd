---
title: "Highlight-text Quarto Extension"
subtitle: "Quarto Extension"
author:
  - name: "Mickaël CANOUIL, _Ph.D._"
    orcid: "0000-0002-3396-4549"
    url: "https://mickael.canouil.fr"
format:
  html:
    output-file: index
    toc: true
    embed-resources: true
  typst:
    output-file: highlight-typst
    papersize: a4
    margin:
      x: 2.5cm
      y: 2.5cm
  pdf-xelatex:
    output-file: highlight-xelatex
    papersize: a4
    margin:
      x: 2.5cm
      y: 2.5cm
  pdf-lualatex:
    output-file: highlight-lualatex
    pdf-engine: lualatex
    papersize: a4
    margin:
      x: 2.5cm
      y: 2.5cm
  pdf-pdflatex:
    output-file: highlight-pdflatex
    pdf-engine: lualatex
    papersize: a4
    margin:
      x: 2.5cm
      y: 2.5cm
  docx:
    output-file: highlight-docx
  revealjs:
    output-file: highlight-revealjs
    embed-resources: true
  beamer:
    output-file: highlight-beamer
    aspectratio: 169
  pptx:
    output-file: highlight-pptx
format-links:
  - html
  - typst
  - format: pdf-xelatex
    text: "PDF (XeLaTeX)"
  - format: pdf-lualatex
    text: "PDF (LuaLaTeX)"
  - format: pdf-pdflatex
    text: "PDF (PDFLaTeX)"
  - docx
  - revealjs
  - beamer
  - pptx
execute:
  echo: true
filters:
  - highlight-text
brand:
  light:
    color:
      palette:
        fg: "#ffffff"
        bg: "#b22222"
      foreground: "#333333"
      background: "#fafafa"
  dark:
    color:
      palette:
        fg: "#b22222"
        bg: "#ffffff"
      foreground: "#fafafa"
      background: "#333333"
---

This is a Quarto extension that allows to highlight text in a document for various formats: HTML, LaTeX, Typst, Docx, PowerPoint, Reveal.js, and Beamer.

## Installation

```bash
quarto add mcanouil/quarto-highlight-text
```

This will install the extension under the `_extensions` subdirectory.

If you're using version control, you will want to check in this directory.

## Usage

To use the extension, add the following to your document's front matter:

```yaml
filters:
  - highlight-text
```

Then you can use the span syntax markup to highlight text in your document.

### Basic Syntax

The extension supports both British and American English spelling for colour attributes:

```markdown
[Red]{colour="#b22222" bg-colour="#abc123"} # UK spelling
[Blue]{color="#0000ff" bg-color="#abc123"} # US spelling
```

### Shorter Syntax

You can use abbreviated attribute names ([v1.1.1](../../releases/tag/1.1.1)):

```markdown
[Red text]{fg="#b22222"}
[Red background]{bg="#abc123"}
[White on Red]{fg="#ffffff" bg="#b22222"}
```

Supported attributes:

- **Foreground (text) colour**: `fg`, `colour`, or `color`
- **Background colour**: `bg`, `bg-colour`, or `bg-color`

## Font Colour

```markdown
[Red text]{colour="#b22222"}
```

[Red text]{colour="#b22222"}

```markdown
[Blue text]{color="#0000ff"}
```

[Blue text]{color="#0000ff"}

## Background Colour

```markdown
[Red background]{bg-colour="#b22222"}
```

[Red background]{bg-colour="#b22222"}

```markdown
[Blue background]{bg-color="#0000ff"}
```

[Blue background]{bg-color="#0000ff"}

## Font and Background Colour

```markdown
[White text, Red background]{
  fg="#ffffff" bg="#b22222"
}
```

[White text, Red background]{fg="#ffffff" bg="#b22222"}

```markdown
[White text, Blue background]{
  colour="#ffffff" bg-colour="#0000ff"
}
```

[White text, Blue background]{colour="#ffffff" bg-colour="#0000ff"}

## More Examples

```markdown
[text [with a link](https://quarto.org/)]{
  color="#ffffff" bg-color="#00ffff"
}
```

[text [with a link](https://quarto.org/)]{
  color="#ffffff" bg-color="#00ffff"
}

### Using Brand Colours

Define colours once in `_brand.yml` and reference them throughout your documents ([v1.1.0](../../releases/tag/1.1.0)):

```yaml
color:
  palette:
    red: "#b22222"
    custom-blue: "#0000ff"
  primary: "#abc123"
```

Reference these colours directly by name:

```markdown
[Red text]{fg="red"}
[Custom background]{bg="custom-blue"}
[Primary highlight]{bg="primary"}
```

> [!NOTE]
> The old `brand-color.` prefix syntax (e.g., `colour="brand-color.red"`) is deprecated but still supported ([v1.4.0](../../releases/tag/1.4.0)).
> You'll see a warning when using it.
> Use the colour name directly instead: `colour="red"`.

### Light and Dark Theme Support

With Quarto CLI ≥1.7.28, you can define different colours for light and dark themes ([v1.2.0](../../releases/tag/1.2.0)):

**Option 1**: Define themes in document front matter:

```yaml
brand:
  light:
    color:
      palette:
        fg: "#ffffff"
        bg: "#b22222"
  dark:
    color:
      palette:
        fg: "#b22222"
        bg: "#ffffff"
```

**Option 2**: Use external `_brand.yml` file:

```yaml
brand:
  light: _brand.yml
  dark: _brand-dark.yml
```

Then reference theme-aware colours:

```markdown
[This text adapts to theme]{fg="fg" bg="bg"}
```

> [!NOTE]
> Only HTML formats support dynamic light/dark mode switching.
> Other formats will use the light mode colours if available, or fall back to dark mode colours otherwise, unless specified otherwise.

## Brand Colours Examples

Using colours defined in the `brand` section of this document's front matter:

```markdown
[Light: White/Red | Dark: Red/White]{fg="fg" bg="bg"}
```

[Light: White/Red | Dark: Red/White]{fg="fg" bg="bg"}

### Deprecated Syntax (Still Supported)

The old `brand-color.` prefix syntax still works but shows a deprecation warning:

```markdown
[Using deprecated syntax]{colour="brand-color.fg" bg-colour="brand-color.bg"}
```

[Using deprecated syntax]{colour="brand-color.fg" bg-colour="brand-color.bg"}

> **Note**: Use the colour name directly without the `brand-color.` prefix (e.g., `fg="fg"` instead of `colour="brand-color.fg"`).

## Limitations

### LaTeX/PDF Output

The LaTeX `\colorbox` command does not support line wrapping for highlighted text with background colours.
Long highlighted text may overflow or break awkwardly.

**Workaround for XeLaTeX and PDFLaTeX**: Use the `par=true` attribute to add `\parbox{\linewidth}`:

```markdown
[Long text with background]{colour="#b22222" bg-colour="#abc123" par=true}
```

**Best solution**: Use LuaLaTeX as your PDF engine for proper line wrapping with the `lua-ul` package:

```yaml
format:
  pdf:
    pdf-engine: lualatex
```

:::: {.callout-note}
LuaLaTeX is the default PDF engine in Quarto CLI ≥1.8.25.
:::

**Example without workaround**:

```markdown
[Long text example without workaround]{colour="#b22222" bg-colour="#abc123"}
```

[
  LaTeX `\colorbox` command does not support wrapping/line breaks in the text to be highlighted.
This means that the above example will not work well in LaTeX output when using XeLaTeX or PDFLaTeX engines.
]{colour="#b22222" bg-colour="#abc123"}

**Example with `par=true`**:

```markdown
[Long text example with par=true]{colour="#b22222" bg-colour="#abc123" par=true}
```

[
  LaTeX `\colorbox` command does not support wrapping/line breaks in the text to be highlighted.
This means that the above example will not work well in LaTeX output when using XeLaTeX or PDFLaTeX engines.
]{colour="#b22222" bg-colour="#abc123" par=true}

### Word and PowerPoint Output

Docx and Pptx formats only support highlighting plain text.

Links and other inline formatting within highlighted spans may not render correctly.
